name: Angular CI - Test Multiple Browsers

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    # Use a matrix strategy to run tests on different OS and Node versions
    strategy:
      matrix:
        include:
          # - os: macos-latest
          #   node-version: 22.x
          #   shell: bash
          - os: ubuntu-latest
            node-version: 22.x
            shell: bash
          # - os: windows-latest
          #   node-version: 22.x
          #   shell: cmd

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Cache node modules for faster builds

      - name: Install Dependencies
        run: npm ci

      # Install browser dependencies based on OS if needed
      # - name: Install Browser Dependencies (Ubuntu)
      #   if: startsWith(matrix.os, 'ubuntu')
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgbm-dev libatk-bridge2.0-0 libgtk-3-0 libnss3 libxss1

      - name: Install Browser Dependencies (Windows)
        if: startsWith(matrix.os, 'windows')
        # Windows runners usually have Chrome/Edge pre-installed.
        # Add steps here only if you need specific versions or other browsers not pre-installed.
        run: |
          echo "Browser dependencies usually pre-installed on Windows runners."
        # Example: if you needed Firefox on Windows
        # choco install firefox

      - name: Install Browser Dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        # macOS runners usually have Safari and Chrome pre-installed.
        # Add steps here only if you need specific versions or other browsers not pre-installed.
        run: |
          echo "Browser dependencies usually pre-installed on macOS runners."
        # Example: if you needed Firefox on macOS
        # brew install --cask firefox

      # Run tests with different browsers using headless mode
      # Ensure HeadlessCI is configured in your karma.conf.js
      - name: Run Tests - Chrome Headless
        run: npm run test-ci -- --browsers ChromeHeadlessCI

      - name: Run Tests - Firefox Headless (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: npm run test-ci -- --browsers FirefoxHeadlessCI

      # Safari is typically only available on macOS runners and doesn't have a standard headless mode.
      # Testing Safari often requires a virtual display or a different approach.
      # This step is commented out as it requires more complex setup.
      # - name: Run Tests - Safari (macOS)
      #   if: startsWith(matrix.os, 'macOS')
      #   run: npm run test-ci -- --browsers Safari
